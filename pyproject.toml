[tool.poetry]
name = "toolhub"
version = "0.1.0"
description = "An authoritative and well promoted catalog of Wikimedia tools"
authors = [
  "Bryan Davis <bd808@wikimedia.org>"
]
license = "GPL-3.0-or-later"
readme = "README.rst"
include = [
  "README.rst",
  "pyproject.toml",
  "COPYING"
]

[tool.poetry.dependencies]
python = "^3.7"
Django = "^2.2"
django-environ = "^0.4.5"
django-log-request-id = "^1.6.0"
mysqlclient = "^2.0.1"
social-auth-app-django = "^4.0.0"

[tool.poetry.dev-dependencies]
pytest = "^5.2"
flakehell = "^0.6.0"
black = "^20.8b1"
pre-commit = "^2.7.1"
flake8-blind-except = "^0.1.1"
flake8-bugbear = "^20.1.4"
flake8-builtins = "^1.5.3"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
flake8-logging-format = "^0.6.0"
flake8-rst-docstrings = "^0.0.13"
flake8-comprehensions = "^3.2.3"
flake8-isort = "^4.0.0"
pytest-cov = "^2.10.1"
django-coverage-plugin = "^1.8.0"
bandit = "^1.6.2"
sphinx = "^3.2.1"
sphinxcontrib-django = "^0.5.1"
sphinx_rtd_theme = "^0.5.0"
coverage = {extras = ["toml"], version = "^5.3"}

[tool.flakehell]
exclude = [".tox", "__pycache__", "manage.py", "docs"]
format = "grouped"
max_line_length = 79
show_source = true

[tool.flakehell.plugins]
"flake8-*" = ["+*", "-D100"]
pycodestyle = ["+*", "-E501"]
pyflakes = ["+*"]
pylint = ["+*", "-C0114", "-W0511"]

[tool.black]
line-length = 79
target_version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
known_first_party = 'toolhub'
multi_line_output = 3
lines_after_imports = 2
force_grid_wrap = 0
combine_as_imports = true
include_trailing_comma = true

[tool.coverage.run]
source = ["toolhub"]
omit = ["*/migrations/*"]
branch = true
dynamic_context = "test_function"
relative_files = true

[tool.coverage.report]
fail_under = 85
show_missing = true
skip_covered = true
skip_empty = true
ignore_errors = true
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
]

[tool.coverage.html]
directory = "docs/htmlcov"
show_contexts = true

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py37

[testenv]
whitelist_externals = poetry
setenv=
    PYTHONDONTWRITEBYTECODE=true
    PYTHONPATH={toxinidir}
    DJANGO_SECRET_KEY="this is not really a secret"
commands=
  poetry check
  poetry install -v --no-root
  poetry run pre-commit run --all-files
  poetry run flakehell lint
  poetry run black --check --diff .
  poetry run coverage erase
  poetry run coverage run --branch manage.py test
  poetry run coverage report
  poetry run coverage html
  poetry run bandit -ii -r toolhub/
"""

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
